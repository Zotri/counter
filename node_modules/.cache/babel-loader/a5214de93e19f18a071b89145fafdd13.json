{"ast":null,"code":"var _jsxFileName = \"/Users/motri/react_project/counter-app/src/components/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter.jsx\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleDelete = counterId => {\n      console.log(\"response to event handleDelete called\", counterId);\n      const countersAfterDelete = this.state.counters.filter(e => e.id !== counterId);\n      this.setState({\n        counters: countersAfterDelete\n      });\n    };\n\n    this.handleReset = () => {\n      console.log(\"reset called\");\n    };\n  }\n\n  /*handleIncrement = (counterValue) => {\n  \tconsole.log(\"+\", counterValue);\n  \tconst incrementedValue = this.state.counters.map(\n  \t\t(i) => (i.value = counterValue++)\n  \t);\n  \tthis.setState({ counters: incrementedValue });\n  };\n  handleDecrement = (counterId) => {\n  \tconsole.log(\"-\", counterId);\n  \tconst decrementedValue = this.state.counters.map(\n  \t\t(i) => (i.value = counterId)\n  \t);\n  \tthis.setState({ counters: decrementedValue });\n  };*/\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }\n    }, this.state.counters.map(counter => /*#__PURE__*/React.createElement(Counter, {\n      key: counter.id,\n      counter: counter,\n      onDelete: this.handleDelete,\n      onReset: this.handleReset\n      /*onIncrement={this.handleIncrement}\n      onDecrement={this.handleDecrement}*/\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/motri/react_project/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleDelete","counterId","console","log","countersAfterDelete","filter","e","setState","handleReset","render","map","counter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAChCG,KADgC,GACxB;AACPC,MAAAA,QAAQ,EAAE,CACT;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADS,EAET;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFS,EAGT;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHS,EAIT;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJS;AADH,KADwB;;AAAA,SAUhCC,YAVgC,GAUhBC,SAAD,IAAe;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,SAArD;AACA,YAAMG,mBAAmB,GAAG,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,MAApB,CAC1BC,CAAD,IAAOA,CAAC,CAACR,EAAF,KAASG,SADW,CAA5B;AAGA,WAAKM,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAEO;AAAZ,OAAd;AACA,KAhB+B;;AAAA,SAiBhCI,WAjBgC,GAiBlB,MAAM;AACnBN,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,KAnB+B;AAAA;;AAoBhC;;;;;;;;;;;;;;AAeAM,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,GAApB,CAAyBC,OAAD,iBACxB,oBAAC,OAAD;AACC,MAAA,GAAG,EAAEA,OAAO,CAACb,EADd;AAEC,MAAA,OAAO,EAAEa,OAFV;AAGC,MAAA,QAAQ,EAAE,KAAKX,YAHhB;AAIC,MAAA,OAAO,EAAE,KAAKQ;AACd;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CADD;AAcA;;AAlD+B;;AAqDjC,eAAeb,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Counter from \"./counter.jsx\";\n\nclass Counters extends Component {\n\tstate = {\n\t\tcounters: [\n\t\t\t{ id: 1, value: 0 },\n\t\t\t{ id: 2, value: 0 },\n\t\t\t{ id: 3, value: 0 },\n\t\t\t{ id: 4, value: 0 }\n\t\t]\n\t};\n\n\thandleDelete = (counterId) => {\n\t\tconsole.log(\"response to event handleDelete called\", counterId);\n\t\tconst countersAfterDelete = this.state.counters.filter(\n\t\t\t(e) => e.id !== counterId\n\t\t);\n\t\tthis.setState({ counters: countersAfterDelete });\n\t};\n\thandleReset = () => {\n\t\tconsole.log(\"reset called\");\n\t};\n\t/*handleIncrement = (counterValue) => {\n\t\tconsole.log(\"+\", counterValue);\n\t\tconst incrementedValue = this.state.counters.map(\n\t\t\t(i) => (i.value = counterValue++)\n\t\t);\n\t\tthis.setState({ counters: incrementedValue });\n\t};\n\thandleDecrement = (counterId) => {\n\t\tconsole.log(\"-\", counterId);\n\t\tconst decrementedValue = this.state.counters.map(\n\t\t\t(i) => (i.value = counterId)\n\t\t);\n\t\tthis.setState({ counters: decrementedValue });\n\t};*/\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.counters.map((counter) => (\n\t\t\t\t\t<Counter\n\t\t\t\t\t\tkey={counter.id}\n\t\t\t\t\t\tcounter={counter}\n\t\t\t\t\t\tonDelete={this.handleDelete}\n\t\t\t\t\t\tonReset={this.handleReset}\n\t\t\t\t\t\t/*onIncrement={this.handleIncrement}\n\t\t\t\t\t\tonDecrement={this.handleDecrement}*/\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}