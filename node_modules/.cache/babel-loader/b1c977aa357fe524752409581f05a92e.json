{"ast":null,"code":"var _jsxFileName = \"/Users/motri/react_project/counter-app/src/components/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter.jsx\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n  }\n\n  render() {\n    const counterValue = this.state.counters.map(counter => counter.value);\n\n    if (counterValue < 0) {\n      return this.state.counters.filter(counter => counter.value > 0);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }\n    }, this.state.counters.map(counter => /*#__PURE__*/React.createElement(Counter, {\n      key: counter.id,\n      value: counter.value,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/motri/react_project/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","render","counterValue","map","counter","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAChCG,KADgC,GACxB;AACPC,MAAAA,QAAQ,EAAE,CACT;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADS,EAET;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFS,EAGT;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHS,EAIT;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJS;AADH,KADwB;AAAA;;AAUhCC,EAAAA,MAAM,GAAG;AACR,UAAMC,YAAY,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,GAApB,CAAyBC,OAAD,IAAaA,OAAO,CAACJ,KAA7C,CAArB;;AACA,QAAIE,YAAY,GAAG,CAAnB,EAAsB;AACrB,aAAO,KAAKL,KAAL,CAAWC,QAAX,CAAoBO,MAApB,CAA4BD,OAAD,IAAaA,OAAO,CAACJ,KAAR,GAAgB,CAAxD,CAAP;AACA;;AACD,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKH,KAAL,CAAWC,QAAX,CAAoBK,GAApB,CAAyBC,OAAD,iBACxB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACL,EAAtB;AAA0B,MAAA,KAAK,EAAEK,OAAO,CAACJ,KAAzC;AAAgD,MAAA,QAAQ,EAAE,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CADD;AAOA;;AAtB+B;;AAyBjC,eAAeJ,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Counter from \"./counter.jsx\";\n\nclass Counters extends Component {\n\tstate = {\n\t\tcounters: [\n\t\t\t{ id: 1, value: 0 },\n\t\t\t{ id: 2, value: 0 },\n\t\t\t{ id: 3, value: 0 },\n\t\t\t{ id: 4, value: 0 }\n\t\t]\n\t};\n\n\trender() {\n\t\tconst counterValue = this.state.counters.map((counter) => counter.value);\n\t\tif (counterValue < 0) {\n\t\t\treturn this.state.counters.filter((counter) => counter.value > 0);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.counters.map((counter) => (\n\t\t\t\t\t<Counter key={counter.id} value={counter.value} selected={true} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}