{"ast":null,"code":"var _jsxFileName = \"/Users/motri/react_project/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count,\n      tags: [{\n        content: \"tag1\",\n        id: 1\n      }, {\n        content: \"tag2\",\n        id: 2\n      }, {\n        content: \"tag3\",\n        id: 3\n      }]\n    };\n    this.handleIncrement = this.handleIncrement.bind(this);\n    console.log(\"constructor\", this);\n  }\n\n  handleIncrement() {\n    this.state.count += 1;\n    console.log(this.state.count);\n    console.log(\"increment btn is clicked\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.renderBadgeClasses(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, this.formatCount()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleIncrement,\n      className: \"btn btn-secondary btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, \"Increment\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, this.state.tags.map(objItem => /*#__PURE__*/React.createElement(\"li\", {\n      key: objItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, objItem.content))));\n  }\n\n  renderBadgeClasses() {\n    let badgeColor = \"badge m-2 badge-\";\n    badgeColor += this.state.count === 0 ? \"warning\" : \"primary\";\n    return badgeColor;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/motri/react_project/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","constructor","state","count","tags","content","id","handleIncrement","bind","console","log","render","renderBadgeClasses","formatCount","map","objItem","badgeColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAU/BE,EAAAA,WAAW,GAAG;AACb;AADa,SATdC,KASc,GATN;AACPC,MAAAA,KADO;AAEPC,MAAAA,IAAI,EAAE,CACL;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,EAAE,EAAE;AAAvB,OADK,EAEL;AAAED,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,EAAE,EAAE;AAAvB,OAFK,EAGL;AAAED,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,EAAE,EAAE;AAAvB,OAHK;AAFC,KASM;AAEb,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,IAA3B;AACA;;AAEDH,EAAAA,eAAe,GAAG;AACjB,SAAKL,KAAL,CAAWC,KAAX,IAAoB,CAApB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,KAAvB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAM,MAAA,SAAS,EAAE,KAAKC,kBAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6C,KAAKC,WAAL,EAA7C,CADD,eAEC;AACC,MAAA,OAAO,EAAE,KAAKN,eADf;AAEC,MAAA,SAAS,EAAC,0BAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFD,eAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKL,KAAL,CAAWE,IAAX,CAAgBU,GAAhB,CAAqBC,OAAD,iBACpB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACT,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBS,OAAO,CAACV,OAA9B,CADA,CADF,CAPD,CADD;AAeA;;AAEDO,EAAAA,kBAAkB,GAAG;AACpB,QAAII,UAAU,GAAG,kBAAjB;AACAA,IAAAA,UAAU,IAAI,KAAKd,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAnD;AAEA,WAAOa,UAAP;AACA;;AAEDH,EAAAA,WAAW,GAAG;AACb,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACA;;AAlD8B;;AAqDhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n\tstate = {\n\t\tcount,\n\t\ttags: [\n\t\t\t{ content: \"tag1\", id: 1 },\n\t\t\t{ content: \"tag2\", id: 2 },\n\t\t\t{ content: \"tag3\", id: 3 }\n\t\t]\n\t};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.handleIncrement = this.handleIncrement.bind(this);\n\t\tconsole.log(\"constructor\", this);\n\t}\n\n\thandleIncrement() {\n\t\tthis.state.count += 1;\n\t\tconsole.log(this.state.count);\n\t\tconsole.log(\"increment btn is clicked\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<span className={this.renderBadgeClasses()}>{this.formatCount()}</span>\n\t\t\t\t<button\n\t\t\t\t\tonClick={this.handleIncrement}\n\t\t\t\t\tclassName='btn btn-secondary btn-sm'>\n\t\t\t\t\tIncrement\n\t\t\t\t</button>\n\t\t\t\t<ul>\n\t\t\t\t\t{this.state.tags.map((objItem) => (\n\t\t\t\t\t\t<li key={objItem.id}>{objItem.content}</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderBadgeClasses() {\n\t\tlet badgeColor = \"badge m-2 badge-\";\n\t\tbadgeColor += this.state.count === 0 ? \"warning\" : \"primary\";\n\n\t\treturn badgeColor;\n\t}\n\n\tformatCount() {\n\t\tconst { count } = this.state;\n\t\treturn count === 0 ? \"zero\" : count;\n\t}\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}