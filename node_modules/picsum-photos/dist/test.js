"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("./index");
async function test() {
    const neededKeys = [
        'id',
        'author',
        'width',
        'height',
        'url',
        'download_url',
    ];
    const random = await index_1.Picsum.random();
    const keys = Object.keys(random);
    keys.forEach(key => {
        if (!neededKeys.includes(key)) {
            throw new Error('Random image has key that should not be present: ' + key);
        }
    });
    neededKeys.forEach(key => {
        if (!keys.includes(key)) {
            throw new Error('Random image is missing key: ' + key);
        }
    });
    const config = await index_1.Picsum.url({ height: 400, width: 300, cache: false });
    if (config !== 'https://picsum.photos/400/300') {
        throw new Error('Generated image URL is wrong!');
    }
    const cacheless = await index_1.Picsum.url({ jpg: true });
    if (!cacheless.includes('https://picsum.photos/200/200.jpg?random=')) {
        throw new Error('Cache busting is missing or default config is not read!');
    }
}
test()
    .then(() => {
    console.log('Tests passed');
})
    .catch((error) => {
    console.error('Tests failed');
    throw error;
});
//# sourceMappingURL=test.js.map